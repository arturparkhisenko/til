{"version":3,"sources":["index.js"],"names":["console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;;AACA;;AARA;AACA;AACA;AACA;AAEA;AAIAA,OAAO,CAACC,GAAR,CAAY,cAAI,CAAJ,CAAZ;AACAD,OAAO,CAACC,GAAR,CAAY,eAAM,CAAN,CAAZ,GAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","file":"fib-with-parcel.e31bb0bc.map","sourceRoot":"..","sourcesContent":["// wasm should be generated from the cleaned wast\n// To get started you need Cargo's bin directory ($HOME/.cargo/bin) in your PATH\n// environment variable.\n// To configure your current shell run source $HOME/.cargo/env\n\n// sync import\n\nimport {fib} from './fib.wasm';\nimport {fib as fibRs} from './fib.rs';\nconsole.log(fib(9));\nconsole.log(fibRs(9));\n\n// dynamic\n//\n// index.js:\n// module.exports = import('./dynamic').then(function (add) {\n//   return add(2, 3);\n// });\n// dynamic.js\n// var {add} = require('./add.wasm');\n// module.exports = add;\n\n// async\n//\n// WebAssembly module (indirect)\n// import('./fib-sync').then(module => {\n// \t const result = module.default(13);\n//   console.log('fib-async .js', result);\n// });\n\n// WebAssembly module (direct)\n// import('./fib.wasm').then(({fib}) => { // wasm.fib\n//   const result = fib(13);\n//   console.log('fib-async .wasm', result);\n// });\n\n// import('./fib.rs').then(({fib}) => {\n// \tconst result = fib(13);\n//   console.log('fib-async .rs', result);\n// });\n"]}